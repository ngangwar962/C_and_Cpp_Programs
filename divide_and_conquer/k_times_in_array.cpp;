#include<iostream>
using namespace std;
int starting,ending,n,times;
void binary_search(int arr[],int start,int end,int key)
{
	int mid=(start+end)/2;
	if(arr[mid]==key)
	{
		if(mid==0)
		{
			starting=0;
			return;
		}
		else if((end!=n-1)&&(arr[mid+1]!=arr[mid])
		{
			ending=mid;
			binary_search(arr,start,mid-1,key);
			return;
		}
		else if((start!=0)&&(arr[mid-1]!=arr[mid]))
		{
			starting=mid;
			binary_search(arr,mid+1,end,key);
			return;
		}
		binary_search(arr,start,mid-1,key);
		//binary_search(arr,mid+1,end,key);
		
	}
	else if(arr[mid]>key)
	{
		binary_search(arr,start,mid-1,key);
	}
	else if(arr[mid]<key)
	{
		binary_search(arr,mid+1,end,key);
	}
	return;
}
int main()
{
	int i,j,k,value;
	cout<<"enter the size of the array"<<endl;
	cin>>n;
	int arr[n];
	for(i=0;i<n;i++)
	cin>>arr[i];
	cout<<"enter the value to search into the array"<<endl;
	cin>>value;
	cout<<"enter the number of times coming"<<endl;
	cin>>times;
	binary_search(arr,0,n-1,value);
	return 0;
}
